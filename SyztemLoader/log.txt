FUUUU### 12/02/2017--12:51:18 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')\n', 'sz.SZData("echo", "SVar", \'1\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            if int(sz.SZdata[\'echo\'][\'value\']): ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", "        editSidebar(0, 'Scrolling')\n", "        editSidebar(1, 'mode.')\n", "        editSidebar(2, 'w - up')\n", "        editSidebar(3, 's - down')\n", "        editSidebar(4, 'q - exit')\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'\n", "            editSidebar(0, '')\n", "            editSidebar(1, '')\n", "            editSidebar(2, '')\n", "            editSidebar(3, '')\n", "            editSidebar(4, '')"] 
eof+ 
cls 
title Qutin 
cls 
output lol 
lol 
cls 
output 1+2 
1+2 
cls 
output 9458934856 * 2 
9458934856 * 2 
cls 
output echo 0 
echo 0 
cls 
output a 
a 
cls 
output 123 
123 
cls 
output exec if 0: appendCI('true') 
exec if 0: appendCI('true') 
cls 
cls 
output echo 
echo 
cls 
output echo 0 
echo 0 
cls 
output echo 
echo 
cls 
### 12/02/2017--12:53:20 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')\n', 'sz.SZData("echo", "SVar", \'1\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            if sz.SZdata[\'echo\'][\'value\']==\'1\': ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", "        editSidebar(0, 'Scrolling')\n", "        editSidebar(1, 'mode.')\n", "        editSidebar(2, 'w - up')\n", "        editSidebar(3, 's - down')\n", "        editSidebar(4, 'q - exit')\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'\n", "            editSidebar(0, '')\n", "            editSidebar(1, '')\n", "            editSidebar(2, '')\n", "            editSidebar(3, '')\n", "            editSidebar(4, '')"] 
eof+ 
cls 
title Qutin 
cls 
output echo 0 
echo 0 
cls 
output echo 
echo 
cls 
### 12/02/2017--12:54:18 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')\n', 'sz.SZData("echo", "SVar", \'1\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            if sz.SZdata[\'echo\'][\'value\']==\'1\': ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", "        editSidebar(0, 'Scrolling')\n", "        editSidebar(1, 'mode.')\n", "        editSidebar(2, 'w - up')\n", "        editSidebar(3, 's - down')\n", "        editSidebar(4, 'q - exit')\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'\n", "            editSidebar(0, '')\n", "            editSidebar(1, '')\n", "            editSidebar(2, '')\n", "            editSidebar(3, '')\n", "            editSidebar(4, '')"] 
eof+ 
cls 
title Qutin 
cls 
output echo '0' 
echo '0' 
cls 
echo 
cls 
echo 123 
cls 
echo 
cls 
terminate 
### 12/02/2017--12:54:46 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')\n', 'sz.SZData("echo", "SVar", \'1\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            if sz.SZdata[\'echo\'][\'value\']==\'1\': ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", "        editSidebar(0, 'Scrolling')\n", "        editSidebar(1, 'mode.')\n", "        editSidebar(2, 'w - up')\n", "        editSidebar(3, 's - down')\n", "        editSidebar(4, 'q - exit')\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'\n", "            editSidebar(0, '')\n", "            editSidebar(1, '')\n", "            editSidebar(2, '')\n", "            editSidebar(3, '')\n", "            editSidebar(4, '')"] 
eof+ 
cls 
title Qutin 
cls 
output echo 0 
echo 0 
cls 
output lol 
lol 
cls 
output echo 
echo 
cls 
output echo None 
echo None 
cls 
output echo 
echo 
cls 
output echo 'none' 
echo 'none' 
cls 
output echo 
echo 
cls 
output echo 'None' 
echo 'None' 
cls 
echo 
cls 
lol 
cls 
