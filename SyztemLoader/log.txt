
### 08/02/2017--23:18:37 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("clear", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne g¢wno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
porno sex 
terminate 
### 09/02/2017--19:13:55 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
eof+ 
### 09/02/2017--19:25:37 ### 
+Python file funcSetup.py 
['úî#\x00 \x00S\x00e\x00t\x00u\x00p\x00s\x00 \x00a\x00l\x00l\x00 \x00b\x00a\x00s\x00i\x00c\x00 \x00v\x00a\x00r\x00a\x00i\x00b\x00l\x00e\x00s\x00 \x00e\x00t\x00c\x00.\x00\n', '\x00\n', '\x00#\x00 \x00I\x00f\x00 \x00y\x00o\x00u\x00 \x00w\x00a\x00n\x00t\x00 \x00u\x00s\x00e\x00 \x00c\x00o\x00m\x00m\x00a\x00n\x00d\x00s\x00 \x00w\x00i\x00t\x00h\x00 \x00a\x00r\x00g\x00u\x00m\x00e\x00n\x00t\x00s\x00 \x00s\x00i\x00m\x00p\x00l\x00y\x00 \x00p\x00u\x00t\x00 \x00a\x00r\x00g\x00s\x00[\x00i\x00n\x00t\x00]\x00 \x00i\x00n\x00 \x00p\x00l\x00a\x00c\x00e\x00.\x00\n', '\x00\n', '\x00i\x00m\x00p\x00o\x00r\x00t\x00 \x00t\x00i\x00m\x00e\x00\n', '\x00\n', '\x00#\x00 \x00S\x00C\x00m\x00d\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00p\x00r\x00i\x00n\x00t\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00 \x00a\x00s\x00t\x00.\x00l\x00i\x00t\x00e\x00r\x00a\x00l\x00_\x00e\x00v\x00a\x00l\x00(\x00 \x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00[\x000\x00:\x00]\x00)\x00 \x00)\x00 \x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00g\x00e\x00t\x00S\x00Z\x00d\x00a\x00t\x00a\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00s\x00z\x00.\x00S\x00Z\x00d\x00a\x00t\x00a\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00t\x00e\x00r\x00m\x00C\x00o\x00l\x00o\x00r\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00s\x00y\x00s\x00t\x00e\x00m\x00(\x00\'\x00c\x00o\x00l\x00o\x00r\x00 \x00{\x00}\x00\'\x00.\x00f\x00o\x00r\x00m\x00a\x00t\x00(\x00a\x00r\x00g\x00s\x00[\x000\x00]\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00t\x00e\x00r\x00m\x00i\x00n\x00a\x00t\x00e\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00e\x00x\x00i\x00t\x00(\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00p\x00y\x00t\x00h\x00o\x00n\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00I\x00S\x00C\x00.\x00p\x00y\x00t\x00h\x00o\x00n\x00(\x00a\x00r\x00g\x00s\x00[\x000\x00]\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00c\x00d\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00c\x00h\x00d\x00i\x00r\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00c\x00l\x00s\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00s\x00y\x00s\x00t\x00e\x00m\x00(\x00\'\x00c\x00l\x00s\x00\'\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00c\x00l\x00e\x00a\x00r\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00c\x00m\x00d\x00I\x00n\x00p\x00u\x00t\x00=\x00[\x00]\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00l\x00s\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00o\x00s\x00.\x00l\x00i\x00s\x00t\x00d\x00i\x00r\x00(\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00d\x00i\x00r\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00o\x00s\x00.\x00g\x00e\x00t\x00c\x00w\x00d\x00(\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00s\x00h\x00o\x00w\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00s\x00z\x00.\x00s\x00h\x00o\x00w\x00F\x00i\x00l\x00e\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00e\x00x\x00e\x00c\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00e\x00x\x00e\x00c\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00t\x00i\x00t\x00l\x00e\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00s\x00y\x00s\x00t\x00e\x00m\x00(\x00\'\x00t\x00i\x00t\x00l\x00e\x00 \x00{\x00}\x00\'\x00.\x00f\x00o\x00r\x00m\x00a\x00t\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00o\x00u\x00t\x00p\x00u\x00t\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00c\x00m\x00d\x00I\x00n\x00p\x00u\x00t\x00.\x00a\x00p\x00p\x00e\x00n\x00d\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00'] 
eof+ 
python poorFile.py 
python poorFile.py 
### 09/02/2017--19:43:20 ### 
+Python file funcSetup.py 
['úî#\x00 \x00S\x00e\x00t\x00u\x00p\x00s\x00 \x00a\x00l\x00l\x00 \x00b\x00a\x00s\x00i\x00c\x00 \x00v\x00a\x00r\x00a\x00i\x00b\x00l\x00e\x00s\x00 \x00e\x00t\x00c\x00.\x00\n', '\x00\n', '\x00#\x00 \x00I\x00f\x00 \x00y\x00o\x00u\x00 \x00w\x00a\x00n\x00t\x00 \x00u\x00s\x00e\x00 \x00c\x00o\x00m\x00m\x00a\x00n\x00d\x00s\x00 \x00w\x00i\x00t\x00h\x00 \x00a\x00r\x00g\x00u\x00m\x00e\x00n\x00t\x00s\x00 \x00s\x00i\x00m\x00p\x00l\x00y\x00 \x00p\x00u\x00t\x00 \x00a\x00r\x00g\x00s\x00[\x00i\x00n\x00t\x00]\x00 \x00i\x00n\x00 \x00p\x00l\x00a\x00c\x00e\x00.\x00\n', '\x00\n', '\x00i\x00m\x00p\x00o\x00r\x00t\x00 \x00t\x00i\x00m\x00e\x00\n', '\x00\n', '\x00#\x00 \x00S\x00C\x00m\x00d\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00p\x00r\x00i\x00n\x00t\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00 \x00a\x00s\x00t\x00.\x00l\x00i\x00t\x00e\x00r\x00a\x00l\x00_\x00e\x00v\x00a\x00l\x00(\x00 \x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00[\x000\x00:\x00]\x00)\x00 \x00)\x00 \x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00g\x00e\x00t\x00S\x00Z\x00d\x00a\x00t\x00a\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00s\x00z\x00.\x00S\x00Z\x00d\x00a\x00t\x00a\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00t\x00e\x00r\x00m\x00C\x00o\x00l\x00o\x00r\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00s\x00y\x00s\x00t\x00e\x00m\x00(\x00\'\x00c\x00o\x00l\x00o\x00r\x00 \x00{\x00}\x00\'\x00.\x00f\x00o\x00r\x00m\x00a\x00t\x00(\x00a\x00r\x00g\x00s\x00[\x000\x00]\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00t\x00e\x00r\x00m\x00i\x00n\x00a\x00t\x00e\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00e\x00x\x00i\x00t\x00(\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00p\x00y\x00t\x00h\x00o\x00n\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00I\x00S\x00C\x00.\x00p\x00y\x00t\x00h\x00o\x00n\x00(\x00a\x00r\x00g\x00s\x00[\x000\x00]\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00c\x00d\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00c\x00h\x00d\x00i\x00r\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00c\x00l\x00s\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00s\x00y\x00s\x00t\x00e\x00m\x00(\x00\'\x00c\x00l\x00s\x00\'\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00c\x00l\x00e\x00a\x00r\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00c\x00m\x00d\x00I\x00n\x00p\x00u\x00t\x00=\x00[\x00]\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00l\x00s\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00o\x00s\x00.\x00l\x00i\x00s\x00t\x00d\x00i\x00r\x00(\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00d\x00i\x00r\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00p\x00r\x00i\x00n\x00t\x00(\x00o\x00s\x00.\x00g\x00e\x00t\x00c\x00w\x00d\x00(\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00s\x00h\x00o\x00w\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00s\x00z\x00.\x00s\x00h\x00o\x00w\x00F\x00i\x00l\x00e\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00e\x00x\x00e\x00c\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00e\x00x\x00e\x00c\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00t\x00i\x00t\x00l\x00e\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00o\x00s\x00.\x00s\x00y\x00s\x00t\x00e\x00m\x00(\x00\'\x00t\x00i\x00t\x00l\x00e\x00 \x00{\x00}\x00\'\x00.\x00f\x00o\x00r\x00m\x00a\x00t\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00)\x00"\x00)\x00\n', '\x00\n', '\x00s\x00z\x00.\x00S\x00Z\x00D\x00a\x00t\x00a\x00(\x00"\x00o\x00u\x00t\x00p\x00u\x00t\x00"\x00,\x00 \x00"\x00S\x00C\x00m\x00d\x00"\x00,\x00 \x00"\x00c\x00m\x00d\x00I\x00n\x00p\x00u\x00t\x00.\x00a\x00p\x00p\x00e\x00n\x00d\x00(\x00\'\x00 \x00\'\x00.\x00j\x00o\x00i\x00n\x00(\x00a\x00r\x00g\x00s\x00)\x00)\x00"\x00)\x00'] 
eof+ 
python poorFile.py 
python poorFile.py 
### 09/02/2017--19:44:57 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
eof+ 
### 09/02/2017--19:46:00 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [""*10]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  "'==\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"ÏQutin\n', '{}                                                                  "'v0\n', '{}                                                                  "'\n', '{}                                                                  "'PreInDev\n', '{}                                                                  "'\n', '{}                                                                  "'LOL\n', '{}                                                                  ""?"?"?"?"?"?"?"?"?\n', '{}                                                                  "'Nothing\n', '{}                                                                  "'  to\n', '{}                                                                  "'display.\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"ï"?"?"?"?"?"?"?"?"?""".format(os.getcwd(), cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:47:09 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [""*10]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0"'\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?|Qutin\n', '{}                                                                  "'v0\n', '{}                                                                  "'\n', '{}                                                                  "'PreInDev\n', '{}                                                                  "'\n', '{}                                                                  "'LOL\n', '{}                                                                  ""?"?"?"?"?"?"?"?"?\n', '{}                                                                  "'Nothing\n', '{}                                                                  "'  to\n', '{}                                                                  "'display.\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '{}                                                                  "'\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"ï"?"?"?"?"?"?"?"?"?""".format(os.getcwd(), cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
### 09/02/2017--19:48:41 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [""*10]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format(os.getcwd(), cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:52:46 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format(os.getcwd(), cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:53:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?"?|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format(os.getcwd(), cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:54:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format(os.getcwd()))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:55:33 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    toPrintOut = """\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------"""\n', '    print(toPrintOut.format(os.getcwd(), cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:55:57 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    toPrintOut = """\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------"""\n', '    print(toPrintOut)\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:56:41 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    toPrintOut = """\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------"""\n', '    print(toPrintOut.format(os.getcwd()))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--19:57:44 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    toPrintOut = """\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------"""\n', '    print(toPrintOut.format(os.getcwd()))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--20:00:13 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    toPrintOut = """\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------"""\n', '    print(toPrintOut.format(os.getcwd()))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
ECHO jest w¥czone.
### 09/02/2017--20:01:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------""")\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
0 
clear 
lol 
clear 
terminate 
### 09/02/2017--20:02:16 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}                                                                  |==\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------""".format(os.getcwd()))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
ECHO jest w¥czone.
### 09/02/2017--20:07:15 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------""".format(os.getcwd()))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--20:10:20 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(2)\n', 'ISC.do("clear")\n', 'print("By this console you can use SCmds.")\n', 'print("To get a list enter getSZdata. (Good luck in reading it!)")\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(76-len( os.getcwd() ))+"|==" ))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
clear 
### 09/02/2017--20:11:31 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(69-len( os.getcwd() ))+"|==" ))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
### 09/02/2017--20:11:49 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'cmdInput = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBP OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '                                                                    |v0\n', '                                                                    |\n', '                                                                    |PreInDev\n', '                                                                    |\n', '                                                                    |LOL\n', '                                                                    |---------\n', '                                                                    |Nothing\n', '                                                                    |  to\n', '                                                                    |display.\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '                                                                    |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==" ))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
clear 
### 09/02/2017--20:25:34 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'cmdInput = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
### 09/02/2017--20:27:00 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", "cmdInput=[]")\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
### 09/02/2017--20:28:13 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
clear 
clear 
output abc 
### 09/02/2017--20:29:14 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
output sadfdg 
### 09/02/2017--20:30:12 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'poorFile.cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "poorFile.cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
### 09/02/2017--20:35:19 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput.append(\' \'.join(args))")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
output abc 
### 09/02/2017--20:39:32 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
outpit SPam 
clear 
lol 
clear 
outpit fgfhfsdg 
clear 
outpit 'fgfhfsdg' 
clear 
ECHO jest w¥czone.
### 09/02/2017--20:40:00 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
ECHO jest w¥czone.
### 09/02/2017--20:40:25 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("clear")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("clear")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)'] 
eof+ 
clear 
title Qutin 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
clear 
### 09/02/2017--20:41:24 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)'] 
eof+ 
cls 
title Qutin 
cls 
output hello 
cls 
output hello 
cls 
vfdgfh 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
### 09/02/2017--20:43:19 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{}                                                                  |v0\n', '{}                                                                  |\n', '{}                                                                  |PreInDev\n', '{}                                                                  |\n', '{}                                                                  |LOL\n', '{}                                                                  |---------\n', '{}                                                                  |Nothing\n', '{}                                                                  |  to\n', '{}                                                                  |display.\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '{}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)'] 
eof+ 
cls 
title Qutin 
cls 
output hello 
cls 
lol 
cls 
output hello2 
cls 
### 09/02/2017--20:51:52 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}                                                                  |v0\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |PreInDev\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |LOL\n', '{: <68}                                                                  |---------\n', '{: <68}                                                                  |Nothing\n', '{: <68}                                                                  |  to\n', '{: <68}                                                                  |display.\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '{: <68}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)'] 
eof+ 
cls 
title Qutin 
cls 
### 09/02/2017--20:52:37 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <67}                                                                  |v0\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |PreInDev\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |LOL\n', '{: <67}                                                                  |---------\n', '{: <67}                                                                  |Nothing\n', '{: <67}                                                                  |  to\n', '{: <67}                                                                  |display.\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '{: <67}                                                                  |\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)'] 
eof+ 
cls 
title Qutin 
cls 
### 09/02/2017--20:54:29 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)'] 
eof+ 
cls 
title Qutin 
cls 
output lol 
cls 
output More lol 
cls 
output Spam eggs 
cls 
### 09/02/2017--20:59:42 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
lol 
output lol 
cls 
sdfgfhj 
output sdfgfhj 
cls 
### 09/02/2017--21:14:21 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# Functions\n', 'def appendCI(txt):\n', "    cmdInput=ast.literal_eval(sz.SZdata['cmdInput']['value'])\n", '    cmdInput.append(str(txt))\n', '    del cmdInput[0]\n', "    sz.SZdata['cmdInput']['value']=str(cmdInput)\n", '\n', 'def listDir():\n', '    last = 0\n', '    add = []\n', '    for i in os.listdir():\n', '        if len(a), '            appendCI(add)\n', '            add = []\n', '        else:\n', '            add.append(i)\n', '    if add:\n', '        appendCI(add)\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
ls 
### 09/02/2017--21:14:59 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# Functions\n', 'def appendCI(txt):\n', "    cmdInput=ast.literal_eval(sz.SZdata['cmdInput']['value'])\n", '    cmdInput.append(str(txt))\n', '    del cmdInput[0]\n', "    sz.SZdata['cmdInput']['value']=str(cmdInput)\n", '\n', 'def listDir():\n', '    last = 0\n', '    add = []\n', '    for i in os.listdir():\n', '        if len(a), '            appendCI(add)\n', '            add = []\n', '        else:\n', '            add.append(i)\n', '    if add:\n', '        appendCI(add)\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
exec sz.appendCI("abc") 
### 09/02/2017--21:15:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# Functions\n', 'def appendCI(txt):\n', "    cmdInput=ast.literal_eval(sz.SZdata['cmdInput']['value'])\n", '    cmdInput.append(str(txt))\n', '    del cmdInput[0]\n', "    sz.SZdata['cmdInput']['value']=str(cmdInput)\n", '\n', 'def listDir():\n', '    last = 0\n', '    add = []\n', '    for i in os.listdir():\n', '        if len(a), '            appendCI(add)\n', '            add = []\n', '        else:\n', '            add.append(i)\n', '    if add:\n', '        appendCI(add)\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
exec sz.appendCI("123") 
### 09/02/2017--21:16:18 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '# Functions\n', 'def appendCI(txt):\n', "    cmdInput=ast.literal_eval(sz.SZdata['cmdInput']['value'])\n", '    cmdInput.append(str(txt))\n', '    del cmdInput[0]\n', "    sz.SZdata['cmdInput']['value']=str(cmdInput)\n", '\n', 'def listDir():\n', '    last = 0\n', '    add = []\n', '    for i in os.listdir():\n', '        if len(a), '            appendCI(add)\n', '            add = []\n', '        else:\n', '            add.append(i)\n', '    if add:\n', '        appendCI(add)\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
exec syztem.appendCI("123") 
### 09/02/2017--21:17:54 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['# Functions\n', 'def appendCI(txt):\n', "    cmdInput=ast.literal_eval(sz.SZdata['cmdInput']['value'])\n", '    cmdInput.append(str(txt))\n', '    del cmdInput[0]\n', "    sz.SZdata['cmdInput']['value']=str(cmdInput)\n", '\n', 'def listDir():\n', '    last = 0\n', '    add = []\n', '    for i in os.listdir():\n', '        if len(a), '            appendCI(add)\n', '            add = []\n', '        else:\n', '            add.append(i)\n', '    if add:\n', '        appendCI(add)\n', 'ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
ls 
### 09/02/2017--21:18:41 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
ls 
### 09/02/2017--21:19:07 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
ls 
output ls 
cls 
### 09/02/2017--21:19:43 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do(x)\n', '        ISC.do("output {}".format(x))'] 
eof+ 
cls 
title Qutin 
cls 
ls 
output ls 
cls 
### 09/02/2017--21:22:25 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'cmdInput = ["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output co 
co 
cls 
output dsfg 
dsfg 
cls 
output clear 
clear 
cls 
output cls 
cls 
cls 
output output dfgbhjntjuy grhjty 
output dfgbhjntjuy grhjty 
cls 
output ls 
ls 
cls 
output terminate 
terminate 
### 09/02/2017--21:24:57 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'sz.clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output lol 
lol 
cls 
output clear 
clear 
### 09/02/2017--21:25:15 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'syztem.clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output dfge 
dfge 
cls 
output clear 
clear 
### 09/02/2017--21:25:46 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output clear 
clear 
cls 
output lol 
lol 
cls 
output clear 
clear 
cls 
output df 
df 
cls 
output sag 
sag 
cls 
output asdg 
asdg 
cls 
output sda 
sda 
cls 
output g 
g 
cls 
output asg 
asg 
cls 
output as 
as 
cls 
output fg 
fg 
cls 
output agsag 
agsag 
cls 
output asg 
asg 
cls 
output as 
as 
cls 
output g 
g 
cls 
cls 
output fs 
fs 
cls 
output ag 
ag 
cls 
output as 
as 
cls 
output g 
g 
cls 
cls 
output as 
as 
cls 
output sdf 
sdf 
cls 
output sd 
sd 
cls 
output gs 
gs 
cls 
output g 
g 
cls 
output s 
s 
cls 
output sdfgsdfg 
sdfgsdfg 
cls 
output sadg 
sadg 
cls 
output asdg 
asdg 
cls 
output asdg 
asdg 
cls 
output asdg 
asdg 
cls 
output asd 
asd 
cls 
output gasd 
gasd 
cls 
output fgasd 
fgasd 
cls 
output ga 
ga 
cls 
output teg 
teg 
cls 
output vsf 
vsf 
cls 
output sg 
sg 
cls 
output rtyh 
rtyh 
cls 
output fvsd 
fvsd 
cls 
output vs 
vs 
cls 
output h 
h 
cls 
output hd 
hd 
cls 
output vs 
vs 
cls 
output g 
g 
cls 
output rh 
rh 
cls 
output fgb 
fgb 
cls 
output g 
g 
cls 
output bvg 
bvg 
cls 
output sdfgg 
sdfgg 
cls 
output b 
b 
cls 
output ger 
ger 
cls 
cls 
output gf 
gf 
cls 
output clear 
clear 
cls 
output terminate 
terminate 
### 10/02/2017--14:53:44 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', 'import time\n', '\n', '        \n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gÆwno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output cls 
cls 
cls 
output rfgs 
rfgs 
cls 
output sdfgh 
sdfgh 
cls 
cls 
### 10/02/2017--21:34:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output set a 123 
set a 123 
cls 
output a 
a 
cls 
### 10/02/2017--21:44:06 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output lol 
lol 
cls 
output set a 123 
set a 123 
cls 
output a 
a 
cls 
### 10/02/2017--21:45:14 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output set a 123 
set a 123 
cls 
output a 
a 
cls 
output QWorking 
QWorking 
cls 
### 10/02/2017--21:45:49 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output QWorking 
QWorking 
cls 
output set 'a' '123' 
set 'a' '123' 
cls 
output a 
a 
cls 
output exec appendCI('lol') 
exec appendCI('lol') 
cls 
output exec appendCI(sz.SVar('QWorking')) 
exec appendCI(sz.SVar('QWorking')) 
cls 
output exec sz.SVar('QWorking') 
exec sz.SVar('QWorking') 
cls 
### 10/02/2017--21:49:43 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output QWorking 
QWorking 
### 10/02/2017--21:50:58 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output QWorking 
QWorking 
### 10/02/2017--21:51:13 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec sz.SVar('QWorking') 
exec sz.SVar('QWorking') 
cls 
### 10/02/2017--21:52:43 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output QWorking 
QWorking 
cls 
output exec appendCI(sz.SZdata[p[0]]['value']) 
exec appendCI(sz.SZdata[p[0]]['value']) 
### 10/02/2017--21:53:21 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec appendCI(sz.SZdata['QWorking']['value']) 
exec appendCI(sz.SZdata['QWorking']['value']) 
cls 
### 10/02/2017--21:57:24 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output test 
test 
cls 
output test 123 
test 123 
cls 
output test 
test 
cls 
output exec ast.literal_eval("sz.config") 
exec ast.literal_eval("sz.config") 
### 10/02/2017--22:05:15 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output a 123 
a 123 
cls 
output a 
a 
cls 
output set a 123 
set a 123 
cls 
output a 
a 
cls 
### 11/02/2017--17:11:01 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec SVar('test', importTest()) 
exec SVar('test', importTest()) 
### 11/02/2017--17:11:32 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec sz.SVar("test", importTest()) 
exec sz.SVar("test", importTest()) 
### 11/02/2017--17:13:06 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "exec(\' \'.join(args), globals())")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec sz.SVar("test", importTest()) 
exec sz.SVar("test", importTest()) 
### 11/02/2017--17:16:03 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec chdfgihjkkuyi 
exec chdfgihjkkuyi 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
output terminate 
terminate 
### 11/02/2017--19:00:21 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("output", "SCmd", "cmdInput=ast.literal_eval(sz.SZdata[\'cmdInput\'][\'value\'])\\ndel cmdInput[0]\\ncmdInput.append(\' \'.join(args))\\nsz.SZdata[\'cmdInput\'][\'value\']=str(cmdInput)")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', '\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec global importTest 
exec global importTest 
cls 
output exec SVar("test", importTest()) 
exec SVar("test", importTest()) 
cls 
output test 
test 
cls 
output exec global importTest() 
exec global importTest() 
cls 
output exec global importTe 
exec global importTe 
cls 
output exec global importTest()\nSVar("test2", importTest()) 
exec global importTest()\nSVar("test2", importTest()) 
cls 
output clear 
clear 
cls 
output exec appendCI("lol")\nappendCI("secondLol") 
exec appendCI("lol")\nappendCI("secondLol") 
cls 
### 11/02/2017--19:15:23 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output output 123 
output 123 
cls 
output output 123 
output 123 
cls 
### 11/02/2017--19:20:36 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output output 123 
output 123 
cls 
output output 123 
output 123 
cls 
output output 123 
output 123 
cls 
output ddfsg 
ddfsg 
cls 
output bfd 
bfd 
cls 
output bf 
bf 
cls 
output sdb 
sdb 
cls 
output f 
f 
cls 
output bndbg 
bndbg 
cls 
output dfb 
dfb 
cls 
cls 
cls 
cls 
output output 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000lol xd so long idk what could happen if i will try to send this to appendCI() 
output 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000lol xd so long idk what could happen if i will try to send this to appendCI() 
cls 
output clear 
clear 
cls 
output output 12348624444444444444547812657836589236157896398567825643789569836257823458934895683465 
output 12348624444444444444547812657836589236157896398567825643789569836257823458934895683465 
cls 
output ls 
ls 
cls 
### 11/02/2017--19:24:40 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output ls 
ls 
cls 
### 11/02/2017--19:25:29 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[0], cmdInput[1], cmdInput[2], cmdInput[3], cmdInput[4], cmdInput[5], cmdInput[6], cmdInput[7], cmdInput[8], cmdInput[9], cmdInput[10], cmdInput[11], cmdInput[12], cmdInput[13], cmdInput[14], cmdInput[15], cmdInput[16], cmdInput[17], cmdInput[18], cmdInput[19], cmdInput[20]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output ls 
ls 
cls 
### 11/02/2017--19:27:52 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[-21], cmdInput[-20], cmdInput[-19], cmdInput[-18], cmdInput[-17], cmdInput[-16], cmdInput[-15], cmdInput[-14], cmdInput[-13], cmdInput[-12], cmdInput[-11], cmdInput[-10], cmdInput[-9], cmdInput[-8], cmdInput[-7], cmdInput[-6], cmdInput[-5], cmdInput[-4], cmdInput[-3], cmdInput[-2], cmdInput[-1]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output lol 
lol 
cls 
output output xd 
output xd 
cls 
output output xdsdfjhhgfddvjndfigheruiwhgvi4yt574y38hyc8f4h387h8vh74vh38ctg4h57yh58hncv48htgv84hg85g4y 
output xdsdfjhhgfddvjndfigheruiwhgvi4yt574y38hyc8f4h387h8vh74vh38ctg4h57yh58hncv48htgv84hg85g4y 
cls 
cls 
### 11/02/2017--19:38:01 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'currentPageScroll = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], cmdInput[ currentPageScroll[13] ], cmdInput[ currentPageScroll[12] ], cmdInput[ currentPageScroll[11] ], cmdInput[ currentPageScroll[10] ], cmdInput[ currentPageScroll[9] ], cmdInput[ currentPageScroll[8] ], cmdInput[ currentPageScroll[7] ], cmdInput[ currentPageScroll[6] ], cmdInput[ currentPageScroll[5] ], cmdInput[ currentPageScroll[4] ], cmdInput[ currentPageScroll[3] ], cmdInput[ currentPageScroll[2] ], cmdInput[ currentPageScroll[1] ], cmdInput[ currentPageScroll[0] ]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output dfs 
dfs 
cls 
output adfsggh 
adfsggh 
cls 
output dfg 
dfg 
cls 
output wdf 
wdf 
cls 
output asgd 
asgd 
cls 
### 11/02/2017--19:51:40 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'currentPageScroll = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], cmdInput[ currentPageScroll[13] ], cmdInput[ currentPageScroll[12] ], cmdInput[ currentPageScroll[11] ], cmdInput[ currentPageScroll[10] ], cmdInput[ currentPageScroll[9] ], cmdInput[ currentPageScroll[8] ], cmdInput[ currentPageScroll[7] ], cmdInput[ currentPageScroll[6] ], cmdInput[ currentPageScroll[5] ], cmdInput[ currentPageScroll[4] ], cmdInput[ currentPageScroll[3] ], cmdInput[ currentPageScroll[2] ], cmdInput[ currentPageScroll[1] ], cmdInput[ currentPageScroll[0] ]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output xd 
xd 
cls 
output asdfg 
asdfg 
cls 
output g 
g 
cls 
output dfg 
dfg 
cls 
### 11/02/2017--19:52:31 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'currentPageScroll = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], cmdInput[ currentPageScroll[13] ], cmdInput[ currentPageScroll[12] ], cmdInput[ currentPageScroll[11] ], cmdInput[ currentPageScroll[10] ], cmdInput[ currentPageScroll[9] ], cmdInput[ currentPageScroll[8] ], cmdInput[ currentPageScroll[7] ], cmdInput[ currentPageScroll[6] ], cmdInput[ currentPageScroll[5] ], cmdInput[ currentPageScroll[4] ], cmdInput[ currentPageScroll[3] ], cmdInput[ currentPageScroll[2] ], cmdInput[ currentPageScroll[1] ], cmdInput[ currentPageScroll[0] ]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
cls 
output sdf 
sdf 
cls 
output sdaf 
sdaf 
cls 
output sf 
sf 
cls 
output ssdfgvfvdsfv 
ssdfgvfvdsfv 
cls 
output sdf 
sdf 
cls 
output sdaf 
sdaf 
cls 
output sdfg 
sdfg 
cls 
output asfg 
asfg 
cls 
output adsf 
adsf 
cls 
output asdf 
asdf 
cls 
output asdf 
asdf 
cls 
output asd 
asd 
cls 
output fasd 
fasd 
cls 
output fasd 
fasd 
cls 
output fasdg 
fasdg 
cls 
output sadfg 
sadfg 
cls 
output asdg 
asdg 
cls 
output asdfg 
asdfg 
cls 
output asdg 
asdg 
cls 
output asdfg 
asdfg 
cls 
output asdg 
asdg 
cls 
output asdg 
asdg 
cls 
output asfg 
asfg 
cls 
output asg 
asg 
cls 
output sfg 
sfg 
cls 
output sdfgs 
sdfgs 
cls 
output fgs 
fgs 
cls 
output dfsdf 
dfsdf 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
### 11/02/2017--19:54:03 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', "currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], cmdInput[ currentPageScroll[13] ], cmdInput[ currentPageScroll[12] ], cmdInput[ currentPageScroll[11] ], cmdInput[ currentPageScroll[10] ], cmdInput[ currentPageScroll[9] ], cmdInput[ currentPageScroll[8] ], cmdInput[ currentPageScroll[7] ], cmdInput[ currentPageScroll[6] ], cmdInput[ currentPageScroll[5] ], cmdInput[ currentPageScroll[4] ], cmdInput[ currentPageScroll[3] ], cmdInput[ currentPageScroll[2] ], cmdInput[ currentPageScroll[1] ], cmdInput[ currentPageScroll[0] ]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output 1 
1 
cls 
output 2 
2 
cls 
output 3 
3 
cls 
output 4 
4 
cls 
output 5 
5 
cls 
output 6 
6 
cls 
output 7 
7 
cls 
output 8 
8 
cls 
output 9 
9 
cls 
output 0 
0 
cls 
output 1 
1 
cls 
output 2 
2 
cls 
output 3 
3 
cls 
output 4 
4 
cls 
output 5 
5 
cls 
output 6 
6 
cls 
output 7 
7 
cls 
output 8 
8 
cls 
output 9 
9 
cls 
output 0 
0 
cls 
output 1 
1 
cls 
output 2 
2 
cls 
output 3 
3 
cls 
output 4 
4 
cls 
output 5 
5 
cls 
output 6 
6 
cls 
output 7 
7 
cls 
output 8 
8 
cls 
output 9 
9 
cls 
output 0 
0 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
output scrollDown 
scrollDown 
cls 
### 11/02/2017--19:55:13 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', "currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], cmdInput[ currentPageScroll[13] ], cmdInput[ currentPageScroll[12] ], cmdInput[ currentPageScroll[11] ], cmdInput[ currentPageScroll[10] ], cmdInput[ currentPageScroll[9] ], cmdInput[ currentPageScroll[8] ], cmdInput[ currentPageScroll[7] ], cmdInput[ currentPageScroll[6] ], cmdInput[ currentPageScroll[5] ], cmdInput[ currentPageScroll[4] ], cmdInput[ currentPageScroll[3] ], cmdInput[ currentPageScroll[2] ], cmdInput[ currentPageScroll[1] ], cmdInput[ currentPageScroll[0] ]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output currentPageScroll 
currentPageScroll 
cls 
output scrollUp 
scrollUp 
cls 
output currentPageScroll 
currentPageScroll 
cls 
### 11/02/2017--19:55:48 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0`\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    print("""\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|Nothing\n', '{: <68}|  to\n', '{: <68}|display.\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '{: <68}|\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], cmdInput[ currentPageScroll[13] ], cmdInput[ currentPageScroll[12] ], cmdInput[ currentPageScroll[11] ], cmdInput[ currentPageScroll[10] ], cmdInput[ currentPageScroll[9] ], cmdInput[ currentPageScroll[8] ], cmdInput[ currentPageScroll[7] ], cmdInput[ currentPageScroll[6] ], cmdInput[ currentPageScroll[5] ], cmdInput[ currentPageScroll[4] ], cmdInput[ currentPageScroll[3] ], cmdInput[ currentPageScroll[2] ], cmdInput[ currentPageScroll[1] ], cmdInput[ currentPageScroll[0] ]))\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output 1 
1 
cls 
output 23 
23 
cls 
output 342 
342 
cls 
output 53 
53 
cls 
output 5667 
5667 
cls 
output 678 
678 
cls 
output 345123 
345123 
cls 
output 421 
421 
cls 
output 3453 
3453 
cls 
output 253 
253 
cls 
output 63245 
63245 
cls 
output 3456 
3456 
cls 
cls 
output dfgsd 
dfgsd 
cls 
output d 
d 
cls 
output sfgb 
sfgb 
cls 
output fgb 
fgb 
cls 
output dfgb 
dfgb 
cls 
output dfs 
dfs 
cls 
output sfdg 
sfdg 
cls 
output 546 
546 
cls 
output 3465 
3465 
cls 
output 35 
35 
cls 
output 634 
634 
cls 
output sc 
sc 
cls 
output vsd 
vsd 
cls 
output fgv 
fgv 
cls 
output lol 
lol 
cls 
output zdsd 
zdsd 
cls 
output sdfwete 
sdfwete 
cls 
output asdfsf 
asdfsf 
cls 
output sadfs 
sadfs 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
output scrollUp 
scrollUp 
cls 
### 11/02/2017--20:15:13 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sidebar = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
### 11/02/2017--20:15:46 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sidebar = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', 'print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
### 11/02/2017--20:15:58 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'sidebar = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ]\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", '    ISC.do("cls")\n', '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output lol 
lol 
cls 
output fd 
fd 
cls 
output sdf 
sdf 
cls 
output sfg 
sfg 
cls 
output sdg 
sdg 
cls 
output sgf 
sgf 
cls 
output sgf 
sgf 
cls 
output sfg 
sfg 
cls 
output sdg 
sdg 
cls 
output ewrg 
ewrg 
cls 
output gv 
gv 
cls 
output v 
v 
cls 
output fv 
fv 
cls 
output sdfv 
sdfv 
cls 
output c 
c 
cls 
output ggvergr 
ggvergr 
cls 
output gvd 
gvd 
cls 
output g 
g 
cls 
output sg 
sg 
cls 
output dcfg 
dcfg 
cls 
output d 
d 
cls 
output g 
g 
cls 
output dgdfv 
dgdfv 
cls 
output cgg 
cgg 
cls 
### 11/02/2017--20:43:22 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZDara("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
### 11/02/2017--20:44:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZDara("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
### 11/02/2017--20:45:02 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output test 
test 
cls 
output test 1+2 
test 1+2 
cls 
output test 
test 
### 11/02/2017--20:45:40 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output test 1+2 
test 1+2 
cls 
output test 
test 
### 11/02/2017--20:46:44 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output test 
test 
cls 
output test 1+2 
test 1+2 
cls 
output test 
test 
cls 
### 11/02/2017--20:49:49 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("editSidebar", "SCmd", "editSidebar(args[0], args[1])")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output editSidebar 1 abc 
editSidebar 1 abc 
### 11/02/2017--20:50:40 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("editSidebar", "SCmd", "editSidebar(args[0], args[1])")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output editSidebar 0 hello 
editSidebar 0 hello 
cls 
output editSidebar 2 lol lol 
editSidebar 2 lol lol 
cls 
### 11/02/2017--20:51:39 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("editSidebar", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def importTest():\n', '    return 256'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output editSidebar 1 hello world! 
editSidebar 1 hello world! 
cls 
output terminate 
terminate 
### 11/02/2017--20:56:31 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def TestFunc():\n', '    return 256\n', '\n', 'import time'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'global time\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
### 11/02/2017--21:08:24 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', '\n', 'def TestFunc():\n', '    return 256\n'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec print(locals() == l, globals() == g) 
exec print(locals() == l, globals() == g) 
cls 
output exec print(locals() == l) 
exec print(locals() == l) 
cls 
output exec print('123 321') 
exec print('123 321') 
cls 
output exec SVar(locals() == sz.l) 
exec SVar(locals() == sz.l) 
cls 
output exec SVar('locals', locals() == sz.l) 
exec SVar('locals', locals() == sz.l) 
cls 
output exec if locals() == sz.l: SVar('locals', 'True') 
exec if locals() == sz.l: SVar('locals', 'True') 
cls 
output locals 
locals 
cls 
output exec if globals() == sz.g: SVar('globals', 'True') 
exec if globals() == sz.g: SVar('globals', 'True') 
cls 
output globals 
globals 
cls 
### 11/02/2017--21:28:47 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(1)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
output exec SVar('hello', qutin.TestFunc()) 
exec SVar('hello', qutin.TestFunc()) 
cls 
output exec qutin.TestFunc() 
exec qutin.TestFunc() 
cls 
### 11/02/2017--21:30:27 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.5)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
### 11/02/2017--21:31:01 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.5)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
### 11/02/2017--21:36:01 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:39:35 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:39:49 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:40:30 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:43:14 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:43:33 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:44:18 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:47:38 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:47:55 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:57:14 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:57:46 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--21:58:10 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
### 11/02/2017--22:10:54 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.5)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
### 11/02/2017--22:11:11 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', '    x = input()\n', '    if x:\n', '        ISC.do("output {}".format(x))\n', '        ISC.do(x)\n'] 
eof+ 
cls 
title Qutin 
cls 
### 11/02/2017--22:28:37 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'"] 
eof+ 
cls 
title Qutin 
cls 
output fds 
fds 
cls 
output fdg 
fdg 
cls 
output sgsdf 
sgsdf 
cls 
output gsd 
gsd 
cls 
output ges 
ges 
cls 
output gsdf 
gsdf 
cls 
output gsd 
gsd 
cls 
output fg 
fg 
cls 
output sfgh 
sfgh 
cls 
output se 
se 
cls 
output h 
h 
cls 
output fg 
fg 
cls 
output h 
h 
cls 
output sdfg 
sdfg 
cls 
output s 
s 
cls 
cls 
output sdfg 
sdfg 
cls 
output to 
to 
cls 
output jest 
jest 
cls 
output wiele 
wiele 
cls 
output tekstu 
tekstu 
cls 
output lorem 
lorem 
cls 
output ipsum 
ipsum 
cls 
output dolor 
dolor 
cls 
output nie 
nie 
cls 
output chce 
chce 
cls 
output mis 
mis 
cls 
output ie 
ie 
cls 
output tego 
tego 
cls 
output pisac 
pisac 
cls 
output bo 
bo 
cls 
output i tak 
i tak 
cls 
output juz 
juz 
cls 
output nie 
nie 
cls 
output musze 
musze 
cls 
output mode scroll 
mode scroll 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
output lol 
lol 
cls 
output xd 
xd 
cls 
output co 
co 
cls 
output sie 
sie 
cls 
output stao 
stao 
cls 
output scrollUp 
scrollUp 
cls 
output scrollDown 
scrollDown 
cls 
output hghdf 
hghdf 
cls 
output mode scroll 
mode scroll 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
### 11/02/2017--22:37:22 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", "        editSidebar(0, 'Scrolling')\n", "        editSidebar(1, 'mode.')\n", "        editSidebar(2, 'w - up')\n", "        editSidebar(3, 's - down')\n", "        editSidebar(4, 'q - exit')\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'\n", "            editSidebar(0, '')\n", "            editSidebar(1, '')\n", "            editSidebar(2, '')\n", "            editSidebar(3, '')\n", "            editSidebar(4, '')"] 
eof+ 
cls 
title Qutin 
cls 
output mode scroll 
mode scroll 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
cls 
output mode scroll 
mode scroll 
cls 
cls 
cls 
cls 
cls 
cls 
### 11/02/2017--22:42:56 ### 
+Python file funcSetup.py 
['# Setups all basic varaibles etc.\n', '# If you want use commands with arguments simply put args[int] in place.\n', '\n', '# SCmd\n', 'sz.SZData("print", "SCmd", "print( ast.literal_eval( \' \'.join(args[0:]) ) )")\n', 'sz.SZData("getSZdata", "SCmd", "print(sz.SZdata)")\n', 'sz.SZData("termColor", "SCmd", "os.system(\'color {}\'.format(args[0]))")\n', 'sz.SZData("terminate", "SCmd", "exit()")\n', 'sz.SZData("python", "SCmd", "ISC.python(args[0])")\n', 'sz.SZData("cd", "SCmd", "os.chdir(\' \'.join(args))")\n', 'sz.SZData("cls", "SCmd", "os.system(\'cls\')")\n', 'sz.SZData("listdir", "SCmd", "print(os.listdir())")\n', 'sz.SZData("dir", "SCmd", "print(os.getcwd())")\n', 'sz.SZData("show", "SCmd", "sz.showFile(\' \'.join(args))")\n', 'sz.SZData("title", "SCmd", "os.system(\'title {}\'.format(\' \'.join(args)))")\n', 'sz.SZData("set", "SCmd", "sz.SZData(args[0], \'SVar\', args[1])")\n', '\n', '# SVars\n', 'sz.SZData("test", "SVar", "spam eggs")\n'] 
eof+ 
+Python file qutinSetup.py 
['# SCmd\n', 'sz.SZData("clear", "SCmd", \'clearCI()\')\n', 'sz.SZData("ls", "SCmd", "listDir()")\n', 'sz.SZData("exec", "SCmd", "try:\\n   exec(\' \'.join(args), globals())\\nexcept:\\n  appendCI(\'Failed to execute\')")\n', 'sz.SZData("output", "SCmd", "appendCI(\' \'.join(args))")\n', 'sz.SZData("scrollUp", "SCmd", "scrollUp()")\n', 'sz.SZData("scrollDown", "SCmd", "scrollDown()")\n', 'sz.SZData("note", "SCmd", "editSidebar(args[0], \' \'.join(args[1:]))")\n', 'sz.SZData("mode", "SCmd", "sz.SZdata[\'termMode\'][\'value\'] = args[0]")\n', '# SVars\n', 'sz.SZData("cmdInput", "SVar", \'["  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  "]\')\n', 'sz.SZData("QWorking", "SVar", "Yeah! :D")\n', 'sz.SZData("currentPageScroll", \'SVar\', \'[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\')\n', 'sz.SZData("sidebarContent", "SVar", \'["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]\')\n', 'sz.SZData("termMode", "SVar", \'console\')'] 
eof+ 
python poorFile.py 
python poorFile.py 
+Python file poorFile.py 
['ISC.do("cls")\n', 'ISC.do("title Qutin")\n', 'print("""\n', '\n', '#PBFSEP V0.1.0\n', '\n', '\n', '                          SBPQ OS\n', '(Early shit/Wczesne gowno)""")\n', 'time.sleep(0.75)\n', 'while True:\n', "    currentPageScroll = ast.literal_eval( sz.SZdata['currentPageScroll']['value'] )\n", "    sidebar = ast.literal_eval(sz.SZdata['sidebarContent']['value'])\n", '    cmdInput = ast.literal_eval(sz.SZdata["cmdInput"]["value"])\n', "    mode = sz.SZdata['termMode']['value']\n", '    ISC.do("cls")\n', '    screen = """\\\n', '{}\n', '--------------------------------------------------------------------|Qutin\n', '{: <68}|v0\n', '{: <68}|\n', '{: <68}|PreInDev\n', '{: <68}|\n', '{: <68}|LOL\n', '{: <68}|---------\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '{: <68}|{:.9}\n', '--------------------------------------------------------------------^---------""".format( os.getcwd()+" "*(68-len( os.getcwd() ))+"|==", cmdInput[ currentPageScroll[20] ], cmdInput[ currentPageScroll[19] ], cmdInput[ currentPageScroll[18] ], cmdInput[ currentPageScroll[17] ], cmdInput[ currentPageScroll[16] ], cmdInput[ currentPageScroll[15] ], cmdInput[ currentPageScroll[14] ], sidebar[0], cmdInput[ currentPageScroll[13] ], sidebar[1], cmdInput[ currentPageScroll[12] ], sidebar[2], cmdInput[ currentPageScroll[11] ], sidebar[3], cmdInput[ currentPageScroll[10] ], sidebar[4], cmdInput[ currentPageScroll[9] ], sidebar[5], cmdInput[ currentPageScroll[8] ], sidebar[6], cmdInput[ currentPageScroll[7] ], sidebar[7], cmdInput[ currentPageScroll[6] ], sidebar[8], cmdInput[ currentPageScroll[5] ], sidebar[9], cmdInput[ currentPageScroll[4] ], sidebar[10], cmdInput[ currentPageScroll[3] ], sidebar[11], cmdInput[ currentPageScroll[2] ], sidebar[12], cmdInput[ currentPageScroll[1] ], sidebar[13], cmdInput[ currentPageScroll[0] ], sidebar[14])\n', '    print(screen)\n', "    if mode == 'console':\n", '        x = input()\n', '        if x:\n', '            ISC.do("output {}".format(x))\n', '            ISC.do(x)\n', "    elif mode == 'scroll':\n", "        editSidebar(0, 'Scrolling')\n", "        editSidebar(1, 'mode.')\n", "        editSidebar(2, 'w - up')\n", "        editSidebar(3, 's - down')\n", "        editSidebar(4, 'q - exit')\n", '        x = msvcrt.getch()\n', "        if x == b'w':\n", '            scrollUp()\n', "        elif x == b's':\n", '            scrollDown()\n', "        elif x == b'q':\n", "            sz.SZdata['termMode']['value'] = 'console'\n", "            editSidebar(0, '')\n", "            editSidebar(1, '')\n", "            editSidebar(2, '')\n", "            editSidebar(3, '')\n", "            editSidebar(4, '')"] 
eof+ 
cls 
title Qutin 
cls 
output mode scroll 
mode scroll 
cls 
cls 
